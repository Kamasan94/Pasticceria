// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pasticceria.Models;

#nullable disable

namespace Pasticceria.Migrations
{
    [DbContext(typeof(PasticceriaContext))]
    [Migration("20220205143659_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Pasticceria.Models.Dolce", b =>
                {
                    b.Property<int>("DolceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DolceId"), 1L, 1);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DolceId");

                    b.ToTable("Dolci");
                });

            modelBuilder.Entity("Pasticceria.Models.Ingrediente", b =>
                {
                    b.Property<int>("IngredienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngredienteId"), 1L, 1);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IngredienteId");

                    b.ToTable("Ingredienti");
                });

            modelBuilder.Entity("Pasticceria.Models.Ricetta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DolceId")
                        .HasColumnType("int");

                    b.Property<int>("IngredienteId")
                        .HasColumnType("int");

                    b.Property<int>("Quantita")
                        .HasColumnType("int");

                    b.Property<string>("UM")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("DolceId");

                    b.HasIndex("IngredienteId");

                    b.ToTable("Ricette");
                });

            modelBuilder.Entity("Pasticceria.Models.Vetrina", b =>
                {
                    b.Property<int>("VetrinaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VetrinaId"), 1L, 1);

                    b.Property<int>("DolceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("MessaInVendita")
                        .HasColumnType("date");

                    b.Property<decimal>("Prezzo")
                        .HasColumnType("decimal(19,4)");

                    b.Property<int>("Quantita")
                        .HasColumnType("int");

                    b.HasKey("VetrinaId");

                    b.HasIndex("DolceId");

                    b.ToTable("Vetrina");
                });

            modelBuilder.Entity("Pasticceria.Models.Ricetta", b =>
                {
                    b.HasOne("Pasticceria.Models.Dolce", null)
                        .WithMany("Ricetta")
                        .HasForeignKey("DolceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pasticceria.Models.Ingrediente", null)
                        .WithMany("Ricetta")
                        .HasForeignKey("IngredienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pasticceria.Models.Vetrina", b =>
                {
                    b.HasOne("Pasticceria.Models.Dolce", null)
                        .WithMany("Vetrina")
                        .HasForeignKey("DolceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pasticceria.Models.Dolce", b =>
                {
                    b.Navigation("Ricetta");

                    b.Navigation("Vetrina");
                });

            modelBuilder.Entity("Pasticceria.Models.Ingrediente", b =>
                {
                    b.Navigation("Ricetta");
                });
#pragma warning restore 612, 618
        }
    }
}
